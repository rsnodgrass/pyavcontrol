[project]
version = "0.1.2" # see below
requires-python = ">=3.10"

[tool.poetry]
name = "pyavcontrol"
version = "0.1.2"
description = "Python Control of Audio/Visual Equipment (RS232/IP)"
readme = "README.md"
license = "LICENSE"
authors = [ "Ryan Snodgrass <rsnodgrass@gmail.com>" ]

[tool.poetry.dependencies]
python = "^3.10"
pyserial = "^3.5"
pyserial-asyncio = "^0.6"
ratelimit = "^2.2.1"
pyyaml = "^6.0.1"

[tool.poetry.group.dev.dependencies]
coloredlogs = "^15.0.1"
pytest = "^8.0.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# pip install .[test]
[project.optional-dependencies]
test = [ "coloredlogs", "pre-commit" ]
doc = [ "sphinx" ]

[tool.isort]
profile = "black"
force_to_top = [ "logging" ]
balanced_wrapping = true

[tool.black]
line-length = 88

# NOTE: brunette does not use pyproject.toml -- see .pre-commit and .github/workflows/bruneete.yml
#[tool.brunette]
#line-length = 88
#single-quotes = true

[tool.pycln]
all = true

[tool.refurb]
python_version = "3.11"
quiet = true
ignore = [ "FURB184" ]

[tool.pylint.format]
max-line-length = "88"

[tool.pylint.FORMAT]
expected-line-ending-format = "LF"

[tool.pylint.CODE_STYLE]
max-line-length-suggestions = 90

[tool.pytest.ini_options]
pythonpath = [ "." ]
