#!/usr/bin/env python3

import logging

import coloredlogs
from jinja2 import Template
import argparse as arg

from pyavcontrol import DeviceModelLibrary

LOG = logging.getLogger(__name__)
coloredlogs.install(level="DEBUG")

TEMPLATE = '''
## Supported Equipment

*This is autogenerated from the series and protocol yaml definitions.*

{% for manufacture in manufacture_models %}
### {{ manufacturer.name }}

| Model(s) |   Type    | Tested     | Notes     |
| -------- | :-------: | :--------: | --------- |
{% for model in manufacturer.models %}
| {{ model.id }} | {{ model.type }} | {{ model.tested }} | {{ model.notes }} |
{% endfor %}

{% endfor %}
'''

def parse_args():
    p = arg.ArgumentParser(description="Generate SUPPORTED.md using current pyavcontrol model library")
    p.add_argument(
        "--output", default="SUPPORTED-generated.md", help="Markdown output file"
    )
    p.add_argument(
        "--library", help="library directory"
    )
    p.add_argument("-d", "--debug", action="store_true", help="verbose logging")
    return p.parse_args()

def main():
    args = parse_args()
    
    library = DeviceModelLibrary.create()
    supported_models = library.supported_models()

    for model_id in supported_models:
        model_def = library.load_model(model_id)
        info = model_def.info
        print(f"{model_id}: {info}")

        # FIXME: created sorted list of tuples for each manufacturer (and for manufacturers)

    supported_model_details = {}
    print( template.render(manufacturer_models=supported_model_details) )

if __name__ == "__main__":
    main()
